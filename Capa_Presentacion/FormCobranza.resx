<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tgAAAABJRU5ErkJggg==
</value>
  </data>
</root>